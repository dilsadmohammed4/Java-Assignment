Q1. WAP in Java to print and find the sum of following series:
a) 1+ 1/2 + 1/3 + 1/4 + 1/5 + .. 1/N. Find the sum of this series.
Answer:-

import java.util.Scanner;
public class Assign7_I_a{
public static void main(String args[]){
    int num;
    double i,sum=0.00;
    Scanner input=new Scanner(System.in);
    System.out.print("Enter the value of N for to this problem 1+ 1/2 + 1/3 + 1/4 + 1/5 + .. 1/N =");
    num=input.nextInt();
    for(i=1;i<=num;i++){
        sum=sum+(1/i);
    }
    System.out.println("Sum is="+sum);


}
}

==============*************=======================

b) 1 + 1/x + 1/x2 + 1/x3+.......+1/xn .Find the sum of this series.
Answer:-

import java.util.Scanner;
import java.lang.Math;
public class Assign7_I_b {
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int num,x;
        double i,sum=0.00;
        System.out.print("Enter the terms N:");
        num=input.nextInt();
        System.out.print("Enter the value of x:");
        x=input.nextInt();
        for(i=1; i<=num; i++){
            sum += 1+(1/Math.pow(x,i));
        }
        System.out.println("Sum="+sum);
    }
}

==============*************=======================

c) 1 + 1/2! + 1/3!+....... +1/n!. Also find the sum.
Answer:-

import java.util.Scanner;

public class Assign7_I_c {
    static int factorial(int num)
    {
        int i,fac = 1;
        for (i = 2; i <= num; i++)
        fac=fac*i;
        return fac;
    }
    static double sum(int num)
    {
        double sum =0;
        int i;
        for (i=1; i <=num; i++)
            sum += 1.0/factorial(i);
        return sum;
    }
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        int num;
        System.out.print("Enter the value of N:");
        num=input.nextInt();
        double l=sum(num);
        System.out.println("Sum is="+l);

    }
}


==============*************=======================

d) 1 + 2^3+ 3^2+ 4^3+ …….+n . Also find the sum.
Answer:-

import java.util.Scanner;

public class Assign7_I_d {
    public static void main(String[] args) {
        int i,num;
        double sum=0;
        Scanner input=new Scanner(System.in);
        System.out.print("Enter the value of N:");
        num=input.nextInt();
        System.out.print("Series is: ");
        for(i=1;i<=num;i++){
            if(i==1){
                System.out.print("1");
            }
            else if(i%2==0){
                System.out.print(" + "+i+"^"+"3");
            }
            else{
                System.out.println(" + "+i+"^"+"2");
            }
        }
        for(i=1;i<=num;i++){
            if(i%2==0){
                sum=sum+Math.pow(i,3);
            }
            else{
                sum=sum+Math.pow(i,2);
            }
        }
        System.out.println("Sum="+sum);
    }
}


==============*************=======================

Q2. Find all 4 digit numbers which satisfies the condition that, square of (First 
two digit + last two digit) = original number. Eg. if number is 3025 then 
(30+25)2 =3025.
Answer:-

public class Assign7_II {

    public static void main(String args[]) {
        int i, first, second;
        int number, sum = 0;
        for (i = 1000; i < 10000; i++) {
            first = i % 100;
            second = i / 100;
            sum = first + second;
            number = sum * sum;
            if (number == i) {
                System.out.println(first + " + " + second + " = " + sum);
                System.out.println("Square of the " + sum + " is = " + number);
            }
        }
    }
}
==============*************=======================

Q3. Input any number and reduce it to single digit by adding all its digits 
repeatedly.
Answer:-

import java.util.Scanner;

public class Assign7_III {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int num, sum = 0;
        System.out.print("Enter the Number:");
        num = input.nextInt();
        while (num > 0 || sum > 9) {
            if (num == 0) {
                num = sum;
                sum = 0;
            }
            sum = sum + num % 10;
            num = num / 10;
        }
        System.out.println("Sum:" + sum);
    }
}

==============*************=======================

Q4. Multiply all digits of a number till a single digit is found. Zeros should be 
ignored from the numbers. Ex- if the number is 406, then result should be 8.
Answer:-

import java.util.Scanner;

public class Assign7_IV {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Please input the number:");
        int a = input.nextInt();
        numberOfProducts(a);

    }

    public static void numberOfProducts(int n) {
        int product = 1;

        while (n != 0) {
            product = product * (n % 10);
            n = n / 10;
        }

        if (product > 10) {
            System.out.println("Intermediate result=" + product);
            numberOfProducts(product);
        } else
            System.out.println("Final 1 digit product=" + product);
    }
}

==============*************=======================

Q5. Find all prime numbers between a given starting and end value(m & n).
Answer:-


import java.util.Scanner;

public class Assign7_V {

    static boolean isPrime(int n) {
        if (n <= 1)
            return false;
        for (int i = 2; i < n; i++)
            if (n % i == 0)
                return false;

        return true;
    }

    static void printPrime(int m, int n) {
        for (int i = m; i <= n; i++) {
            if (isPrime(i))
                System.out.print(i + " ");
        }
    }

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        System.out.print("Enter the starting number:");
        int n = scan.nextInt();
        System.out.print("Enter the Ending Number:");
        int m = scan.nextInt();
        System.out.println("Prime number is:");
        printPrime(n, m);
    }

}

==============*************=======================

Q6. Generate the following patterns:
a) 
    	1  0  0  0  1
    	0  1  0  1  0
    	0  0  1  0  0
 	    0  1  0  1  0
	    1  0  0  0  1
Answer:-

public class Assign7_VI_a {
    public static void main(String args[]) {
        int i = 1, j = 1;
        for (i = 1; i <= 5; i++) {
            for (j = 1; j <= 5; j++) {
                int m = i + j;
                if (i == j || m == 6)
                    System.out.print("1\t");
                else
                    System.out.print("0\t");
            }
            System.out.println();
        }
    }
}

==============*************=======================

b)
	5  4  3  2  1
	5  4  3  2
	5  4  3
	5  4  3
	5  4
	5
Answer:-

public class Assign7_VI_b {
    public static void main(String args[])
    {
        System.out.println("** Printing the pattern... **");

        for (int i = 1; i <= 5; i++)
        {
            for (int j =5; j >=i; j--)
            {
                System.out.print(j + " ");
            }
            System.out.println();
        }
}

}


==============*************=======================


